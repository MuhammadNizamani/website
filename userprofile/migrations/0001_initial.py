# Generated by Django 3.1.7 on 2022-01-19 20:23

import applications.validators
import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('files', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('color', models.CharField(default='', max_length=20)),
                ('thumb', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='files.image')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='TermsOfService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', ckeditor.fields.RichTextField()),
                ('pub_date', models.DateField(default=django.utils.timezone.now, verbose_name='Publiseringsdato')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('categories', models.ManyToManyField(to='userprofile.Category')),
                ('prerequisites', models.ManyToManyField(blank=True, to='userprofile.Skill')),
                ('thumb', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='files.image')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default=None, upload_to='profilepictures', verbose_name='Profilbilde')),
                ('social_discord', models.CharField(blank=True, max_length=30, null=True, verbose_name='Discord-tag')),
                ('social_steam', models.CharField(blank=True, max_length=30, null=True, verbose_name='Steam navn')),
                ('social_battlenet', models.CharField(blank=True, max_length=30, null=True, verbose_name='Battle.net-tag')),
                ('social_git', models.CharField(blank=True, max_length=30, null=True, verbose_name='Github brukernavn')),
                ('limit_social', models.BooleanField(default=False, verbose_name='Vis sosiale profiler kun for andre Hackerspace-medlemmer')),
                ('access_card', models.CharField(blank=True, max_length=20, null=True, verbose_name='NTNU Adgangskort (EMXXXXXXXXXX)')),
                ('study', models.CharField(blank=True, max_length=50, null=True, verbose_name='Studieretning')),
                ('phone_number', models.CharField(blank=True, help_text='Brukes til reservasjonssystem i tilfelle du må kontaktes.', max_length=8, null=True, validators=[applications.validators.validate_phone_number], verbose_name='Telefonnummer')),
                ('show_email', models.BooleanField(default=False, verbose_name='Vis e-postadresse i din profil')),
                ('allergi_gluten', models.BooleanField(default=False, verbose_name='Ønsker glutenfritt alternativ')),
                ('allergi_vegetar', models.BooleanField(default=False, verbose_name='Ønsker vegetar alternativ')),
                ('allergi_vegan', models.BooleanField(default=False, verbose_name='Ønsker vegansk alternativ')),
                ('allergi_annet', models.CharField(blank=True, max_length=140, null=True, verbose_name='Evt. andre ønsker for matservering.')),
                ('accepted_tos', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='userprofile.termsofservice', verbose_name='Seneste aksepterte TOS')),
                ('skills', models.ManyToManyField(blank=True, to='userprofile.Skill', verbose_name='Ferdigheter')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('is_active_member', 'Is an active member. Catchall permission'), ('can_view_social', 'Can see social fields on UserProfile'), ('can_view_admin', 'Can see information for admin panel')),
            },
        ),
    ]
